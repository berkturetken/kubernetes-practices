name: Release application

on:
  push:

env:
  PROJECT_ID: $${{ secrets.GKE_PROJECT }} # GKE_PROJECT: Google Cloud Project ID. The value is stored in GitHub env secrets
  GKE_CLUSTER: berk-personal-cluster
  GKE_ZONE: europe-north1-b
  REGISTRY: europe-north1-docker.pkg.dev
  REPOSITORY: my-docker-repository
  BRANCH: ${{ github.ref_name }}

jobs:
  build-publish-deploy:
    name: Build, Publish and Deploy
    runs-on: ubuntu-latest
    strategy:
      matrix:
        component:
          - name: todo-backend
            context: ./todo_backend
            service: todo-backend
          - name: todo-frontend
            context: ./todo_frontend
            service: todo-frontend
          - name: todo-generator
            context: ./todo_generator
            service: todo-generator
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8

      # Authenticate using a service account key
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@7c6bc770dae815cd3e89ee6cdf493a5fab2cc093
        with:
          credentials_json: ${{ secrets.GKE_SA_KEY }} # not from the env variables. Instead, the secret is stores in GitHub env secrets

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@aa5489c8933f4cc7a4f7d45035b3b1440c9c10db

      - name: Use gcloud CLI
        run: gcloud info

      # Configure Docker to authenticate with Google Container/Artifact Registry so it can push images
      - name: Use gcloud to configure Docker
        run: gcloud --quiet auth configure-docker

      # Configures kubectl to communicate with the GKE cluster
      - name: Get GKE credentials
        uses: google-github-actions/get-gke-credentials@3da1e46a907576cefaa90c484278bb5b259dd395
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          project_id: ${{ env.PROJECT_ID }}
          location: ${{ env.GKE_ZONE }}

      - name: Form the image name
        run: echo "IMAGE_TAG=$REGISTRY/$PROJECT_ID/$REPOSITORY/${{ matrix.component.name }}:$BRANCH-$GITHUB_SHA" >> $GITHUB_ENV

      - name: Build
        run: docker build --tag $IMAGE_TAG ${{ matrix.component.context }}

      - name: Publish
        run: docker push $IMAGE_TAG

      - name: Set up Kustomize
        uses: imranismail/setup-kustomize@2ba527d4d055ab63514ba50a99456fc35684947f

      - name: Deploy
        working-directory: ./todo_app
        run: |
          kustomize edit set image ${{ matrix.component.name | upper }}_IMAGE_FROM_KUSTOMIZATION=$IMAGE_TAG
          kustomize build . | kubectl apply -f -
          kubectl rollout status deployment ${{ matrix.component.service }}
          kubectl get services -o wide
